// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.5.1
// source: proto/events.proto

package proto

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_UNSPECIFIED           EventType = 0
	EventType_VOICE_EVENT           EventType = 1
	EventType_VOICEMAIL_EVENT       EventType = 2
	EventType_LOCATION_UPDATE_EVENT EventType = 3
	EventType_ROAMING_EVENT         EventType = 4
	EventType_TOKEN_AUDIT_EVENT     EventType = 5
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "VOICE_EVENT",
		2: "VOICEMAIL_EVENT",
		3: "LOCATION_UPDATE_EVENT",
		4: "ROAMING_EVENT",
		5: "TOKEN_AUDIT_EVENT",
	}
	EventType_value = map[string]int32{
		"UNSPECIFIED":           0,
		"VOICE_EVENT":           1,
		"VOICEMAIL_EVENT":       2,
		"LOCATION_UPDATE_EVENT": 3,
		"ROAMING_EVENT":         4,
		"TOKEN_AUDIT_EVENT":     5,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_proto_events_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{0}
}

type VoiceEvent_VoiceEventType int32

const (
	VoiceEvent_UNSPECIFIED        VoiceEvent_VoiceEventType = 0
	VoiceEvent_CALL_INITIATED     VoiceEvent_VoiceEventType = 1
	VoiceEvent_CALL_RINGING       VoiceEvent_VoiceEventType = 2
	VoiceEvent_CALL_ANSWERED      VoiceEvent_VoiceEventType = 3
	VoiceEvent_CALL_ENDED         VoiceEvent_VoiceEventType = 4
	VoiceEvent_CALL_FWD_VOICEMAIL VoiceEvent_VoiceEventType = 5
)

// Enum value maps for VoiceEvent_VoiceEventType.
var (
	VoiceEvent_VoiceEventType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "CALL_INITIATED",
		2: "CALL_RINGING",
		3: "CALL_ANSWERED",
		4: "CALL_ENDED",
		5: "CALL_FWD_VOICEMAIL",
	}
	VoiceEvent_VoiceEventType_value = map[string]int32{
		"UNSPECIFIED":        0,
		"CALL_INITIATED":     1,
		"CALL_RINGING":       2,
		"CALL_ANSWERED":      3,
		"CALL_ENDED":         4,
		"CALL_FWD_VOICEMAIL": 5,
	}
)

func (x VoiceEvent_VoiceEventType) Enum() *VoiceEvent_VoiceEventType {
	p := new(VoiceEvent_VoiceEventType)
	*p = x
	return p
}

func (x VoiceEvent_VoiceEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoiceEvent_VoiceEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_proto_enumTypes[1].Descriptor()
}

func (VoiceEvent_VoiceEventType) Type() protoreflect.EnumType {
	return &file_proto_events_proto_enumTypes[1]
}

func (x VoiceEvent_VoiceEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoiceEvent_VoiceEventType.Descriptor instead.
func (VoiceEvent_VoiceEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{7, 0}
}

type VoicemailEvent_VoicemailEventType int32

const (
	VoicemailEvent_UNSPECIFIED   VoicemailEvent_VoicemailEventType = 0
	VoicemailEvent_NEW_VOICEMAIL VoicemailEvent_VoicemailEventType = 1
)

// Enum value maps for VoicemailEvent_VoicemailEventType.
var (
	VoicemailEvent_VoicemailEventType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "NEW_VOICEMAIL",
	}
	VoicemailEvent_VoicemailEventType_value = map[string]int32{
		"UNSPECIFIED":   0,
		"NEW_VOICEMAIL": 1,
	}
)

func (x VoicemailEvent_VoicemailEventType) Enum() *VoicemailEvent_VoicemailEventType {
	p := new(VoicemailEvent_VoicemailEventType)
	*p = x
	return p
}

func (x VoicemailEvent_VoicemailEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoicemailEvent_VoicemailEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_events_proto_enumTypes[2].Descriptor()
}

func (VoicemailEvent_VoicemailEventType) Type() protoreflect.EnumType {
	return &file_proto_events_proto_enumTypes[2]
}

func (x VoicemailEvent_VoicemailEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoicemailEvent_VoicemailEventType.Descriptor instead.
func (VoicemailEvent_VoicemailEventType) EnumDescriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{8, 0}
}

type ManualAckConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enable  bool               `protobuf:"varint,1,opt,name=enable,proto3" json:"enable,omitempty"`
	Timeout *duration.Duration `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *ManualAckConfig) Reset() {
	*x = ManualAckConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ManualAckConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManualAckConfig) ProtoMessage() {}

func (x *ManualAckConfig) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManualAckConfig.ProtoReflect.Descriptor instead.
func (*ManualAckConfig) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{0}
}

func (x *ManualAckConfig) GetEnable() bool {
	if x != nil {
		return x.Enable
	}
	return false
}

func (x *ManualAckConfig) GetTimeout() *duration.Duration {
	if x != nil {
		return x.Timeout
	}
	return nil
}

type SubscribeEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type []EventType `protobuf:"varint,1,rep,packed,name=type,proto3,enum=wgtwo.events.v0.EventType" json:"type,omitempty"`
	// Types that are assignable to StartPosition:
	//	*SubscribeEventsRequest_StartAtSequence
	//	*SubscribeEventsRequest_StartAtTimestamp
	//	*SubscribeEventsRequest_StartAtTimeDelta
	//	*SubscribeEventsRequest_StartWithLastReceived
	//	*SubscribeEventsRequest_StartAtOldestPossible
	StartPosition isSubscribeEventsRequest_StartPosition `protobuf_oneof:"start_position"`
	ClientId      string                                 `protobuf:"bytes,6,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	QueueName     string                                 `protobuf:"bytes,7,opt,name=queue_name,json=queueName,proto3" json:"queue_name,omitempty"`
	DurableName   string                                 `protobuf:"bytes,8,opt,name=durable_name,json=durableName,proto3" json:"durable_name,omitempty"`
	MaxInFlight   uint32                                 `protobuf:"varint,9,opt,name=max_in_flight,json=maxInFlight,proto3" json:"max_in_flight,omitempty"`
	ManualAck     *ManualAckConfig                       `protobuf:"bytes,10,opt,name=manual_ack,json=manualAck,proto3" json:"manual_ack,omitempty"`
}

func (x *SubscribeEventsRequest) Reset() {
	*x = SubscribeEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEventsRequest) ProtoMessage() {}

func (x *SubscribeEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEventsRequest.ProtoReflect.Descriptor instead.
func (*SubscribeEventsRequest) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{1}
}

func (x *SubscribeEventsRequest) GetType() []EventType {
	if x != nil {
		return x.Type
	}
	return nil
}

func (m *SubscribeEventsRequest) GetStartPosition() isSubscribeEventsRequest_StartPosition {
	if m != nil {
		return m.StartPosition
	}
	return nil
}

func (x *SubscribeEventsRequest) GetStartAtSequence() uint64 {
	if x, ok := x.GetStartPosition().(*SubscribeEventsRequest_StartAtSequence); ok {
		return x.StartAtSequence
	}
	return 0
}

func (x *SubscribeEventsRequest) GetStartAtTimestamp() *timestamp.Timestamp {
	if x, ok := x.GetStartPosition().(*SubscribeEventsRequest_StartAtTimestamp); ok {
		return x.StartAtTimestamp
	}
	return nil
}

func (x *SubscribeEventsRequest) GetStartAtTimeDelta() *duration.Duration {
	if x, ok := x.GetStartPosition().(*SubscribeEventsRequest_StartAtTimeDelta); ok {
		return x.StartAtTimeDelta
	}
	return nil
}

func (x *SubscribeEventsRequest) GetStartWithLastReceived() *empty.Empty {
	if x, ok := x.GetStartPosition().(*SubscribeEventsRequest_StartWithLastReceived); ok {
		return x.StartWithLastReceived
	}
	return nil
}

func (x *SubscribeEventsRequest) GetStartAtOldestPossible() *empty.Empty {
	if x, ok := x.GetStartPosition().(*SubscribeEventsRequest_StartAtOldestPossible); ok {
		return x.StartAtOldestPossible
	}
	return nil
}

func (x *SubscribeEventsRequest) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *SubscribeEventsRequest) GetQueueName() string {
	if x != nil {
		return x.QueueName
	}
	return ""
}

func (x *SubscribeEventsRequest) GetDurableName() string {
	if x != nil {
		return x.DurableName
	}
	return ""
}

func (x *SubscribeEventsRequest) GetMaxInFlight() uint32 {
	if x != nil {
		return x.MaxInFlight
	}
	return 0
}

func (x *SubscribeEventsRequest) GetManualAck() *ManualAckConfig {
	if x != nil {
		return x.ManualAck
	}
	return nil
}

type isSubscribeEventsRequest_StartPosition interface {
	isSubscribeEventsRequest_StartPosition()
}

type SubscribeEventsRequest_StartAtSequence struct {
	StartAtSequence uint64 `protobuf:"varint,2,opt,name=start_at_sequence,json=startAtSequence,proto3,oneof"`
}

type SubscribeEventsRequest_StartAtTimestamp struct {
	StartAtTimestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=start_at_timestamp,json=startAtTimestamp,proto3,oneof"`
}

type SubscribeEventsRequest_StartAtTimeDelta struct {
	StartAtTimeDelta *duration.Duration `protobuf:"bytes,4,opt,name=start_at_time_delta,json=startAtTimeDelta,proto3,oneof"`
}

type SubscribeEventsRequest_StartWithLastReceived struct {
	StartWithLastReceived *empty.Empty `protobuf:"bytes,5,opt,name=start_with_last_received,json=startWithLastReceived,proto3,oneof"`
}

type SubscribeEventsRequest_StartAtOldestPossible struct {
	StartAtOldestPossible *empty.Empty `protobuf:"bytes,11,opt,name=start_at_oldest_possible,json=startAtOldestPossible,proto3,oneof"`
}

func (*SubscribeEventsRequest_StartAtSequence) isSubscribeEventsRequest_StartPosition() {}

func (*SubscribeEventsRequest_StartAtTimestamp) isSubscribeEventsRequest_StartPosition() {}

func (*SubscribeEventsRequest_StartAtTimeDelta) isSubscribeEventsRequest_StartPosition() {}

func (*SubscribeEventsRequest_StartWithLastReceived) isSubscribeEventsRequest_StartPosition() {}

func (*SubscribeEventsRequest_StartAtOldestPossible) isSubscribeEventsRequest_StartPosition() {}

type SubscribeEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Event *Event `protobuf:"bytes,1,opt,name=event,proto3" json:"event,omitempty"`
}

func (x *SubscribeEventsResponse) Reset() {
	*x = SubscribeEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscribeEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeEventsResponse) ProtoMessage() {}

func (x *SubscribeEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeEventsResponse.ProtoReflect.Descriptor instead.
func (*SubscribeEventsResponse) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeEventsResponse) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

type AckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inbox    string `protobuf:"bytes,1,opt,name=inbox,proto3" json:"inbox,omitempty"`
	Sequence uint64 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
}

func (x *AckRequest) Reset() {
	*x = AckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckRequest) ProtoMessage() {}

func (x *AckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckRequest.ProtoReflect.Descriptor instead.
func (*AckRequest) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{3}
}

func (x *AckRequest) GetInbox() string {
	if x != nil {
		return x.Inbox
	}
	return ""
}

func (x *AckRequest) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type AckResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *AckResponse) Reset() {
	*x = AckResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AckResponse) ProtoMessage() {}

func (x *AckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AckResponse.ProtoReflect.Descriptor instead.
func (*AckResponse) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{4}
}

type EventMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sequence      uint64 `protobuf:"varint,1,opt,name=sequence,proto3" json:"sequence,omitempty"`
	IsRedelivered bool   `protobuf:"varint,2,opt,name=is_redelivered,json=isRedelivered,proto3" json:"is_redelivered,omitempty"`
	AckInbox      string `protobuf:"bytes,3,opt,name=ack_inbox,json=ackInbox,proto3" json:"ack_inbox,omitempty"`
}

func (x *EventMetadata) Reset() {
	*x = EventMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventMetadata) ProtoMessage() {}

func (x *EventMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventMetadata.ProtoReflect.Descriptor instead.
func (*EventMetadata) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{5}
}

func (x *EventMetadata) GetSequence() uint64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *EventMetadata) GetIsRedelivered() bool {
	if x != nil {
		return x.IsRedelivered
	}
	return false
}

func (x *EventMetadata) GetAckInbox() string {
	if x != nil {
		return x.AckInbox
	}
	return ""
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata  *EventMetadata       `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Timestamp *timestamp.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	ServiceId string               `protobuf:"bytes,3,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Types that are assignable to Event:
	//	*Event_VoiceEvent
	//	*Event_VoicemailEvent
	//	*Event_LocationUpdateEvent
	//	*Event_RoamingEvent
	Event isEvent_Event `protobuf_oneof:"event"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{6}
}

func (x *Event) GetMetadata() *EventMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Event) GetTimestamp() *timestamp.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (m *Event) GetEvent() isEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *Event) GetVoiceEvent() *VoiceEvent {
	if x, ok := x.GetEvent().(*Event_VoiceEvent); ok {
		return x.VoiceEvent
	}
	return nil
}

func (x *Event) GetVoicemailEvent() *VoicemailEvent {
	if x, ok := x.GetEvent().(*Event_VoicemailEvent); ok {
		return x.VoicemailEvent
	}
	return nil
}

func (x *Event) GetLocationUpdateEvent() *LocationUpdateEvent {
	if x, ok := x.GetEvent().(*Event_LocationUpdateEvent); ok {
		return x.LocationUpdateEvent
	}
	return nil
}

func (x *Event) GetRoamingEvent() *RoamingEvent {
	if x, ok := x.GetEvent().(*Event_RoamingEvent); ok {
		return x.RoamingEvent
	}
	return nil
}

type isEvent_Event interface {
	isEvent_Event()
}

type Event_VoiceEvent struct {
	VoiceEvent *VoiceEvent `protobuf:"bytes,4,opt,name=voice_event,json=voiceEvent,proto3,oneof"`
}

type Event_VoicemailEvent struct {
	VoicemailEvent *VoicemailEvent `protobuf:"bytes,5,opt,name=voicemail_event,json=voicemailEvent,proto3,oneof"`
}

type Event_LocationUpdateEvent struct {
	LocationUpdateEvent *LocationUpdateEvent `protobuf:"bytes,6,opt,name=location_update_event,json=locationUpdateEvent,proto3,oneof"`
}

type Event_RoamingEvent struct {
	RoamingEvent *RoamingEvent `protobuf:"bytes,7,opt,name=roaming_event,json=roamingEvent,proto3,oneof"`
}

func (*Event_VoiceEvent) isEvent_Event() {}

func (*Event_VoicemailEvent) isEvent_Event() {}

func (*Event_LocationUpdateEvent) isEvent_Event() {}

func (*Event_RoamingEvent) isEvent_Event() {}

type VoiceEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CallId         string                    `protobuf:"bytes,1,opt,name=call_id,json=callId,proto3" json:"call_id,omitempty"`
	Type           VoiceEvent_VoiceEventType `protobuf:"varint,2,opt,name=type,proto3,enum=wgtwo.events.v0.VoiceEvent_VoiceEventType" json:"type,omitempty"`
	FromNumber     *PhoneNumber              `protobuf:"bytes,3,opt,name=from_number,json=fromNumber,proto3" json:"from_number,omitempty"`
	ToNumber       *PhoneNumber              `protobuf:"bytes,4,opt,name=to_number,json=toNumber,proto3" json:"to_number,omitempty"`
	Owner          *PhoneNumber              `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`
	CallerIdHidden bool                      `protobuf:"varint,6,opt,name=caller_id_hidden,json=callerIdHidden,proto3" json:"caller_id_hidden,omitempty"`
}

func (x *VoiceEvent) Reset() {
	*x = VoiceEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoiceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoiceEvent) ProtoMessage() {}

func (x *VoiceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoiceEvent.ProtoReflect.Descriptor instead.
func (*VoiceEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{7}
}

func (x *VoiceEvent) GetCallId() string {
	if x != nil {
		return x.CallId
	}
	return ""
}

func (x *VoiceEvent) GetType() VoiceEvent_VoiceEventType {
	if x != nil {
		return x.Type
	}
	return VoiceEvent_UNSPECIFIED
}

func (x *VoiceEvent) GetFromNumber() *PhoneNumber {
	if x != nil {
		return x.FromNumber
	}
	return nil
}

func (x *VoiceEvent) GetToNumber() *PhoneNumber {
	if x != nil {
		return x.ToNumber
	}
	return nil
}

func (x *VoiceEvent) GetOwner() *PhoneNumber {
	if x != nil {
		return x.Owner
	}
	return nil
}

func (x *VoiceEvent) GetCallerIdHidden() bool {
	if x != nil {
		return x.CallerIdHidden
	}
	return false
}

type VoicemailEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoicemailId string                            `protobuf:"bytes,1,opt,name=voicemail_id,json=voicemailId,proto3" json:"voicemail_id,omitempty"`
	Type        VoicemailEvent_VoicemailEventType `protobuf:"varint,2,opt,name=type,proto3,enum=wgtwo.events.v0.VoicemailEvent_VoicemailEventType" json:"type,omitempty"`
	FromNumber  *PhoneNumber                      `protobuf:"bytes,3,opt,name=from_number,json=fromNumber,proto3" json:"from_number,omitempty"`
	ToNumber    *PhoneNumber                      `protobuf:"bytes,4,opt,name=to_number,json=toNumber,proto3" json:"to_number,omitempty"`
}

func (x *VoicemailEvent) Reset() {
	*x = VoicemailEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoicemailEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoicemailEvent) ProtoMessage() {}

func (x *VoicemailEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoicemailEvent.ProtoReflect.Descriptor instead.
func (*VoicemailEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{8}
}

func (x *VoicemailEvent) GetVoicemailId() string {
	if x != nil {
		return x.VoicemailId
	}
	return ""
}

func (x *VoicemailEvent) GetType() VoicemailEvent_VoicemailEventType {
	if x != nil {
		return x.Type
	}
	return VoicemailEvent_UNSPECIFIED
}

func (x *VoicemailEvent) GetFromNumber() *PhoneNumber {
	if x != nil {
		return x.FromNumber
	}
	return nil
}

func (x *VoicemailEvent) GetToNumber() *PhoneNumber {
	if x != nil {
		return x.ToNumber
	}
	return nil
}

type LocationUpdateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi     string                        `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Number   *PhoneNumber                  `protobuf:"bytes,2,opt,name=number,proto3" json:"number,omitempty"`
	Previous *LocationUpdateEvent_Location `protobuf:"bytes,3,opt,name=previous,proto3" json:"previous,omitempty"`
	Current  *LocationUpdateEvent_Location `protobuf:"bytes,4,opt,name=current,proto3" json:"current,omitempty"`
}

func (x *LocationUpdateEvent) Reset() {
	*x = LocationUpdateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationUpdateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdateEvent) ProtoMessage() {}

func (x *LocationUpdateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdateEvent.ProtoReflect.Descriptor instead.
func (*LocationUpdateEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{9}
}

func (x *LocationUpdateEvent) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *LocationUpdateEvent) GetNumber() *PhoneNumber {
	if x != nil {
		return x.Number
	}
	return nil
}

func (x *LocationUpdateEvent) GetPrevious() *LocationUpdateEvent_Location {
	if x != nil {
		return x.Previous
	}
	return nil
}

func (x *LocationUpdateEvent) GetCurrent() *LocationUpdateEvent_Location {
	if x != nil {
		return x.Current
	}
	return nil
}

type RoamingEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imsi             string                 `protobuf:"bytes,1,opt,name=imsi,proto3" json:"imsi,omitempty"`
	Msisdn           *PhoneNumber           `protobuf:"bytes,2,opt,name=msisdn,proto3" json:"msisdn,omitempty"`
	PreviousLocation *RoamingEvent_Location `protobuf:"bytes,3,opt,name=previous_location,json=previousLocation,proto3" json:"previous_location,omitempty"`
	CurrentLocation  *RoamingEvent_Location `protobuf:"bytes,4,opt,name=current_location,json=currentLocation,proto3" json:"current_location,omitempty"`
}

func (x *RoamingEvent) Reset() {
	*x = RoamingEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoamingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoamingEvent) ProtoMessage() {}

func (x *RoamingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoamingEvent.ProtoReflect.Descriptor instead.
func (*RoamingEvent) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{10}
}

func (x *RoamingEvent) GetImsi() string {
	if x != nil {
		return x.Imsi
	}
	return ""
}

func (x *RoamingEvent) GetMsisdn() *PhoneNumber {
	if x != nil {
		return x.Msisdn
	}
	return nil
}

func (x *RoamingEvent) GetPreviousLocation() *RoamingEvent_Location {
	if x != nil {
		return x.PreviousLocation
	}
	return nil
}

func (x *RoamingEvent) GetCurrentLocation() *RoamingEvent_Location {
	if x != nil {
		return x.CurrentLocation
	}
	return nil
}

type LocationUpdateEvent_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MscVlrGlobalTitle string `protobuf:"bytes,1,opt,name=msc_vlr_global_title,json=mscVlrGlobalTitle,proto3" json:"msc_vlr_global_title,omitempty"`
	SgsnGlobalTitle   string `protobuf:"bytes,2,opt,name=sgsn_global_title,json=sgsnGlobalTitle,proto3" json:"sgsn_global_title,omitempty"`
	MmeHostname       string `protobuf:"bytes,3,opt,name=mme_hostname,json=mmeHostname,proto3" json:"mme_hostname,omitempty"`
}

func (x *LocationUpdateEvent_Location) Reset() {
	*x = LocationUpdateEvent_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationUpdateEvent_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationUpdateEvent_Location) ProtoMessage() {}

func (x *LocationUpdateEvent_Location) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationUpdateEvent_Location.ProtoReflect.Descriptor instead.
func (*LocationUpdateEvent_Location) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{9, 0}
}

func (x *LocationUpdateEvent_Location) GetMscVlrGlobalTitle() string {
	if x != nil {
		return x.MscVlrGlobalTitle
	}
	return ""
}

func (x *LocationUpdateEvent_Location) GetSgsnGlobalTitle() string {
	if x != nil {
		return x.SgsnGlobalTitle
	}
	return ""
}

func (x *LocationUpdateEvent_Location) GetMmeHostname() string {
	if x != nil {
		return x.MmeHostname
	}
	return ""
}

type RoamingEvent_Location struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CountryCode string `protobuf:"bytes,1,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`
	CountryName string `protobuf:"bytes,2,opt,name=country_name,json=countryName,proto3" json:"country_name,omitempty"`
}

func (x *RoamingEvent_Location) Reset() {
	*x = RoamingEvent_Location{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_events_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoamingEvent_Location) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoamingEvent_Location) ProtoMessage() {}

func (x *RoamingEvent_Location) ProtoReflect() protoreflect.Message {
	mi := &file_proto_events_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoamingEvent_Location.ProtoReflect.Descriptor instead.
func (*RoamingEvent_Location) Descriptor() ([]byte, []int) {
	return file_proto_events_proto_rawDescGZIP(), []int{10, 0}
}

func (x *RoamingEvent_Location) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *RoamingEvent_Location) GetCountryName() string {
	if x != nil {
		return x.CountryName
	}
	return ""
}

var File_proto_events_proto protoreflect.FileDescriptor

var file_proto_events_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x30, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5e, 0x0a, 0x0f,
	0x4d, 0x61, 0x6e, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x16, 0x0a, 0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f,
	0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x8a, 0x05, 0x0a,
	0x16, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x61, 0x74, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x53, 0x65, 0x71,
	0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61,
	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52,
	0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x12, 0x4a, 0x0a, 0x13, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x10, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x41, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x65, 0x6c, 0x74, 0x61, 0x12, 0x51, 0x0a,
	0x18, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6c, 0x61, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x15, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x57, 0x69, 0x74, 0x68, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64,
	0x12, 0x51, 0x0a, 0x18, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x61, 0x74, 0x5f, 0x6f, 0x6c, 0x64,
	0x65, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x48, 0x00, 0x52, 0x15, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x4f, 0x6c, 0x64, 0x65, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x75, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x71, 0x75, 0x65, 0x75, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x75, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x78, 0x5f, 0x69, 0x6e, 0x5f, 0x66, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x49, 0x6e,
	0x46, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3f, 0x0a, 0x0a, 0x6d, 0x61, 0x6e, 0x75, 0x61, 0x6c,
	0x5f, 0x61, 0x63, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x77, 0x67, 0x74,
	0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x4d, 0x61, 0x6e,
	0x75, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x6d, 0x61,
	0x6e, 0x75, 0x61, 0x6c, 0x41, 0x63, 0x6b, 0x42, 0x10, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x47, 0x0a, 0x17, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x22, 0x3e, 0x0a, 0x0a, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x6e, 0x62, 0x6f, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x63, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x6f, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x52, 0x65, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x62,
	0x6f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x62,
	0x6f, 0x78, 0x22, 0xd3, 0x03, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x3a, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30,
	0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x4a, 0x0a, 0x0f, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x77, 0x67, 0x74,
	0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x5a, 0x0a,
	0x15, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x77,
	0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x48, 0x00, 0x52, 0x13, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x44, 0x0a, 0x0d, 0x72, 0x6f, 0x61,
	0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x30, 0x2e, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0c, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0xc2, 0x03, 0x0a, 0x0a, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x6c, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x61, 0x6c, 0x6c, 0x49, 0x64,
	0x12, 0x3e, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a,
	0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30,
	0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x56, 0x6f, 0x69, 0x63,
	0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x3d, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x39, 0x0a, 0x09, 0x74, 0x6f, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x08, 0x74, 0x6f, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77,
	0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x10, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x5f, 0x68, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x63, 0x61, 0x6c, 0x6c, 0x65, 0x72,
	0x49, 0x64, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x22, 0x82, 0x01, 0x0a, 0x0e, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x49, 0x41, 0x54, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x52, 0x49, 0x4e, 0x47, 0x49, 0x4e, 0x47,
	0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x41, 0x4e, 0x53, 0x57, 0x45,
	0x52, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x45, 0x4e,
	0x44, 0x45, 0x44, 0x10, 0x04, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x41, 0x4c, 0x4c, 0x5f, 0x46, 0x57,
	0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x05, 0x22, 0xaf, 0x02,
	0x0a, 0x0e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x32, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x76, 0x30, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x0a,
	0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x09, 0x74, 0x6f,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x08, 0x74, 0x6f, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x38, 0x0a, 0x12, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x4e, 0x45, 0x57, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x4d, 0x41, 0x49, 0x4c, 0x10, 0x01, 0x22,
	0x80, 0x03, 0x0a, 0x13, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x34, 0x0a, 0x06, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67,
	0x74, 0x77, 0x6f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x49, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x12, 0x47, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2d, 0x2e,
	0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x1a, 0x8a, 0x01, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x14, 0x6d, 0x73, 0x63, 0x5f, 0x76, 0x6c, 0x72, 0x5f, 0x67, 0x6c,
	0x6f, 0x62, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x6d, 0x73, 0x63, 0x56, 0x6c, 0x72, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x67, 0x73, 0x6e, 0x5f, 0x67, 0x6c, 0x6f, 0x62,
	0x61, 0x6c, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x73, 0x67, 0x73, 0x6e, 0x47, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x6d, 0x6d, 0x65, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x6d, 0x65, 0x48, 0x6f, 0x73, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xd2, 0x02, 0x0a, 0x0c, 0x52, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6d, 0x73, 0x69, 0x12, 0x34, 0x0a, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x30, 0x2e, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x73, 0x69, 0x73, 0x64, 0x6e, 0x12, 0x53, 0x0a,
	0x11, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f,
	0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x6f, 0x61, 0x6d, 0x69,
	0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x10, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x77,
	0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x52,
	0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x50, 0x0a, 0x08, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x2a, 0x87, 0x01, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x56, 0x4f, 0x49, 0x43, 0x45,
	0x4d, 0x41, 0x49, 0x4c, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15,
	0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f,
	0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x52, 0x4f, 0x41, 0x4d, 0x49,
	0x4e, 0x47, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x4f,
	0x4b, 0x45, 0x4e, 0x5f, 0x41, 0x55, 0x44, 0x49, 0x54, 0x5f, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x10,
	0x05, 0x32, 0xb7, 0x01, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x62, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x27, 0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x76, 0x30, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x77, 0x67, 0x74, 0x77,
	0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x12, 0x42, 0x0a, 0x03, 0x41, 0x63, 0x6b, 0x12, 0x1b,
	0x2e, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30,
	0x2e, 0x41, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x77, 0x67,
	0x74, 0x77, 0x6f, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x30, 0x2e, 0x41, 0x63,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x2b, 0x5a, 0x29, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x69, 0x2d, 0x77, 0x67, 0x32,
	0x2f, 0x77, 0x67, 0x74, 0x77, 0x6f, 0x2d, 0x6d, 0x71, 0x74, 0x74, 0x2f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_events_proto_rawDescOnce sync.Once
	file_proto_events_proto_rawDescData = file_proto_events_proto_rawDesc
)

func file_proto_events_proto_rawDescGZIP() []byte {
	file_proto_events_proto_rawDescOnce.Do(func() {
		file_proto_events_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_events_proto_rawDescData)
	})
	return file_proto_events_proto_rawDescData
}

var file_proto_events_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_proto_events_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_proto_events_proto_goTypes = []interface{}{
	(EventType)(0),                         // 0: wgtwo.events.v0.EventType
	(VoiceEvent_VoiceEventType)(0),         // 1: wgtwo.events.v0.VoiceEvent.VoiceEventType
	(VoicemailEvent_VoicemailEventType)(0), // 2: wgtwo.events.v0.VoicemailEvent.VoicemailEventType
	(*ManualAckConfig)(nil),                // 3: wgtwo.events.v0.ManualAckConfig
	(*SubscribeEventsRequest)(nil),         // 4: wgtwo.events.v0.SubscribeEventsRequest
	(*SubscribeEventsResponse)(nil),        // 5: wgtwo.events.v0.SubscribeEventsResponse
	(*AckRequest)(nil),                     // 6: wgtwo.events.v0.AckRequest
	(*AckResponse)(nil),                    // 7: wgtwo.events.v0.AckResponse
	(*EventMetadata)(nil),                  // 8: wgtwo.events.v0.EventMetadata
	(*Event)(nil),                          // 9: wgtwo.events.v0.Event
	(*VoiceEvent)(nil),                     // 10: wgtwo.events.v0.VoiceEvent
	(*VoicemailEvent)(nil),                 // 11: wgtwo.events.v0.VoicemailEvent
	(*LocationUpdateEvent)(nil),            // 12: wgtwo.events.v0.LocationUpdateEvent
	(*RoamingEvent)(nil),                   // 13: wgtwo.events.v0.RoamingEvent
	(*LocationUpdateEvent_Location)(nil),   // 14: wgtwo.events.v0.LocationUpdateEvent.Location
	(*RoamingEvent_Location)(nil),          // 15: wgtwo.events.v0.RoamingEvent.Location
	(*duration.Duration)(nil),              // 16: google.protobuf.Duration
	(*timestamp.Timestamp)(nil),            // 17: google.protobuf.Timestamp
	(*empty.Empty)(nil),                    // 18: google.protobuf.Empty
	(*PhoneNumber)(nil),                    // 19: wgtwo.common.v0.PhoneNumber
}
var file_proto_events_proto_depIdxs = []int32{
	16, // 0: wgtwo.events.v0.ManualAckConfig.timeout:type_name -> google.protobuf.Duration
	0,  // 1: wgtwo.events.v0.SubscribeEventsRequest.type:type_name -> wgtwo.events.v0.EventType
	17, // 2: wgtwo.events.v0.SubscribeEventsRequest.start_at_timestamp:type_name -> google.protobuf.Timestamp
	16, // 3: wgtwo.events.v0.SubscribeEventsRequest.start_at_time_delta:type_name -> google.protobuf.Duration
	18, // 4: wgtwo.events.v0.SubscribeEventsRequest.start_with_last_received:type_name -> google.protobuf.Empty
	18, // 5: wgtwo.events.v0.SubscribeEventsRequest.start_at_oldest_possible:type_name -> google.protobuf.Empty
	3,  // 6: wgtwo.events.v0.SubscribeEventsRequest.manual_ack:type_name -> wgtwo.events.v0.ManualAckConfig
	9,  // 7: wgtwo.events.v0.SubscribeEventsResponse.event:type_name -> wgtwo.events.v0.Event
	8,  // 8: wgtwo.events.v0.Event.metadata:type_name -> wgtwo.events.v0.EventMetadata
	17, // 9: wgtwo.events.v0.Event.timestamp:type_name -> google.protobuf.Timestamp
	10, // 10: wgtwo.events.v0.Event.voice_event:type_name -> wgtwo.events.v0.VoiceEvent
	11, // 11: wgtwo.events.v0.Event.voicemail_event:type_name -> wgtwo.events.v0.VoicemailEvent
	12, // 12: wgtwo.events.v0.Event.location_update_event:type_name -> wgtwo.events.v0.LocationUpdateEvent
	13, // 13: wgtwo.events.v0.Event.roaming_event:type_name -> wgtwo.events.v0.RoamingEvent
	1,  // 14: wgtwo.events.v0.VoiceEvent.type:type_name -> wgtwo.events.v0.VoiceEvent.VoiceEventType
	19, // 15: wgtwo.events.v0.VoiceEvent.from_number:type_name -> wgtwo.common.v0.PhoneNumber
	19, // 16: wgtwo.events.v0.VoiceEvent.to_number:type_name -> wgtwo.common.v0.PhoneNumber
	19, // 17: wgtwo.events.v0.VoiceEvent.owner:type_name -> wgtwo.common.v0.PhoneNumber
	2,  // 18: wgtwo.events.v0.VoicemailEvent.type:type_name -> wgtwo.events.v0.VoicemailEvent.VoicemailEventType
	19, // 19: wgtwo.events.v0.VoicemailEvent.from_number:type_name -> wgtwo.common.v0.PhoneNumber
	19, // 20: wgtwo.events.v0.VoicemailEvent.to_number:type_name -> wgtwo.common.v0.PhoneNumber
	19, // 21: wgtwo.events.v0.LocationUpdateEvent.number:type_name -> wgtwo.common.v0.PhoneNumber
	14, // 22: wgtwo.events.v0.LocationUpdateEvent.previous:type_name -> wgtwo.events.v0.LocationUpdateEvent.Location
	14, // 23: wgtwo.events.v0.LocationUpdateEvent.current:type_name -> wgtwo.events.v0.LocationUpdateEvent.Location
	19, // 24: wgtwo.events.v0.RoamingEvent.msisdn:type_name -> wgtwo.common.v0.PhoneNumber
	15, // 25: wgtwo.events.v0.RoamingEvent.previous_location:type_name -> wgtwo.events.v0.RoamingEvent.Location
	15, // 26: wgtwo.events.v0.RoamingEvent.current_location:type_name -> wgtwo.events.v0.RoamingEvent.Location
	4,  // 27: wgtwo.events.v0.EventsService.Subscribe:input_type -> wgtwo.events.v0.SubscribeEventsRequest
	6,  // 28: wgtwo.events.v0.EventsService.Ack:input_type -> wgtwo.events.v0.AckRequest
	5,  // 29: wgtwo.events.v0.EventsService.Subscribe:output_type -> wgtwo.events.v0.SubscribeEventsResponse
	7,  // 30: wgtwo.events.v0.EventsService.Ack:output_type -> wgtwo.events.v0.AckResponse
	29, // [29:31] is the sub-list for method output_type
	27, // [27:29] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_proto_events_proto_init() }
func file_proto_events_proto_init() {
	if File_proto_events_proto != nil {
		return
	}
	file_proto_phonenumber_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_proto_events_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ManualAckConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscribeEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AckResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoiceEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoicemailEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationUpdateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoamingEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationUpdateEvent_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_events_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoamingEvent_Location); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_events_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*SubscribeEventsRequest_StartAtSequence)(nil),
		(*SubscribeEventsRequest_StartAtTimestamp)(nil),
		(*SubscribeEventsRequest_StartAtTimeDelta)(nil),
		(*SubscribeEventsRequest_StartWithLastReceived)(nil),
		(*SubscribeEventsRequest_StartAtOldestPossible)(nil),
	}
	file_proto_events_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*Event_VoiceEvent)(nil),
		(*Event_VoicemailEvent)(nil),
		(*Event_LocationUpdateEvent)(nil),
		(*Event_RoamingEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_events_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_events_proto_goTypes,
		DependencyIndexes: file_proto_events_proto_depIdxs,
		EnumInfos:         file_proto_events_proto_enumTypes,
		MessageInfos:      file_proto_events_proto_msgTypes,
	}.Build()
	File_proto_events_proto = out.File
	file_proto_events_proto_rawDesc = nil
	file_proto_events_proto_goTypes = nil
	file_proto_events_proto_depIdxs = nil
}
